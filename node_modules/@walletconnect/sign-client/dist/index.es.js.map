{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/constants/verify.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\nexport const WALLETCONNECT_DEEPLINK_CHOICE = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n\nexport const ENGINE_QUEUE_STATES: { idle: \"IDLE\"; active: \"ACTIVE\" } = {\n  idle: \"IDLE\",\n  active: \"ACTIVE\",\n};\n","export const REQUEST_CONTEXT = \"request\";\n","export const METHODS_TO_VERIFY = [\"wc_sessionPropose\", \"wc_sessionRequest\", \"wc_authRequest\"];\n","import {\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n  RELAYER_DEFAULT_PROTOCOL,\n  RELAYER_EVENTS,\n  VERIFY_SERVER,\n} from \"@walletconnect/core\";\n\nimport {\n  formatJsonRpcError,\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  payloadId,\n  isJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  JsonRpcRequest,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  EnginePrivate,\n  EngineTypes,\n  ExpirerTypes,\n  IEngine,\n  IEngineEvents,\n  JsonRpcTypes,\n  PendingRequestTypes,\n  Verify,\n  CoreTypes,\n  ProposalTypes,\n  RelayerTypes,\n  SessionTypes,\n  PairingTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  createDelayedPromise,\n  engineEvent,\n  getInternalError,\n  getRequiredNamespacesFromNamespaces,\n  getSdkError,\n  isConformingNamespaces,\n  isExpired,\n  isSessionCompatible,\n  isUndefined,\n  isValidController,\n  isValidErrorReason,\n  isValidEvent,\n  isValidId,\n  isValidNamespaces,\n  isValidNamespacesChainId,\n  isValidNamespacesEvent,\n  isValidNamespacesRequest,\n  isValidObject,\n  isValidParams,\n  isValidRelay,\n  isValidRelays,\n  isValidRequest,\n  isValidRequestExpiry,\n  hashMessage,\n  isBrowser,\n  isValidRequiredNamespaces,\n  isValidResponse,\n  isValidString,\n  parseExpirerTarget,\n  TYPE_1,\n  handleDeeplinkRedirect,\n  MemoryStore,\n} from \"@walletconnect/utils\";\nimport EventEmmiter from \"events\";\nimport {\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  PROPOSAL_EXPIRY_MESSAGE,\n  SESSION_EXPIRY,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  METHODS_TO_VERIFY,\n  WALLETCONNECT_DEEPLINK_CHOICE,\n  ENGINE_QUEUE_STATES,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  /**\n   * Queue responsible for processing incoming requests such as session_update, session_event, session_ping etc\n   * It's needed when the client receives multiple requests at once from the mailbox immediately after initialization and to avoid attempting to process them all at the same time\n   */\n  private requestQueue: EngineTypes.EngineQueue<EngineTypes.EventCallback<JsonRpcRequest>> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  /**\n   * Queue responsible for processing incoming session_request\n   * The queue emits the next request only after the previous one has been responded to\n   */\n  private sessionRequestQueue: EngineTypes.EngineQueue<PendingRequestTypes.Struct> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  private requestQueueDelay = ONE_SECOND;\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.registerPairingEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n\n      setTimeout(() => {\n        this.sessionRequestQueue.queue = this.getPendingSessionRequests();\n        this.processSessionRequestQueue();\n      }, toMiliseconds(this.requestQueueDelay));\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    await this.isInitialized();\n\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(FIVE_MINUTES, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionPropose\",\n      params: proposal,\n    });\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    await this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidApprove(params);\n\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n    pairingTopic = pairingTopic || \"\";\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">({\n        id,\n        topic: pairingTopic,\n        result: {\n          relay: {\n            protocol: relayProtocol ?? \"irn\",\n          },\n          responderPublicKey: selfPublicKey,\n        },\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      pairingTopic,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    await this.sendRequest({\n      topic: sessionTopic,\n      method: \"wc_sessionSettle\",\n      params: sessionSettle,\n      throwOnFailedPublish: true,\n    });\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      pairingTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return {\n      topic: sessionTopic,\n      acknowledged: () =>\n        new Promise((resolve) =>\n          setTimeout(() => resolve(this.client.session.get(sessionTopic)), 5_00),\n        ), // artificial delay to allow for the session to be processed by the peer\n    };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionUpdate\",\n      params: { namespaces },\n    });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest({ topic, method: \"wc_sessionExtend\", params: {} });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    await this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = payloadId();\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await Promise.all([\n      new Promise<void>(async (resolve) => {\n        await this.sendRequest({\n          clientRpcId: id,\n          topic,\n          method: \"wc_sessionRequest\",\n          params: { request, chainId },\n          expiry,\n          throwOnFailedPublish: true,\n        }).catch((error) => reject(error));\n        this.client.events.emit(\"session_request_sent\", { topic, request, chainId, id });\n        resolve();\n      }),\n      new Promise<void>(async (resolve) => {\n        const wcDeepLink = await this.client.core.storage.getItem(WALLETCONNECT_DEEPLINK_CHOICE);\n        handleDeeplinkRedirect({ id, topic, wcDeepLink });\n        resolve();\n      }),\n      done(),\n    ]).then((result) => result[2]); // order is important here, we want to return the result of the `done` promise\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult({ id, topic, result: response.result, throwOnFailedPublish: true });\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.cleanupAfterResponse(params);\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest({ topic, method: \"wc_sessionPing\", params: {} });\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest({ topic, method: \"wc_sessionEvent\", params: { event, chainId } });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      // await an ack to ensure the relay has received the disconnect request\n      await this.sendRequest({\n        topic,\n        method: \"wc_sessionDelete\",\n        params: getSdkError(\"USER_DISCONNECTED\"),\n        throwOnFailedPublish: true,\n      });\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private cleanupDuplicatePairings: EnginePrivate[\"cleanupDuplicatePairings\"] = async (\n    session: SessionTypes.Struct,\n  ) => {\n    // older SDK versions are missing the `pairingTopic` prop thus we need to check for it\n    if (!session.pairingTopic) return;\n\n    try {\n      const pairing = this.client.core.pairing.pairings.get(session.pairingTopic);\n      const allPairings = this.client.core.pairing.pairings.getAll();\n      const duplicates = allPairings.filter(\n        (p) =>\n          p.peerMetadata?.url &&\n          p.peerMetadata?.url === session.peer.metadata.url &&\n          p.topic &&\n          p.topic !== pairing.topic,\n      );\n      if (duplicates.length === 0) return;\n      this.client.logger.info(`Cleaning up ${duplicates.length} duplicate pairing(s)`);\n      await Promise.all(\n        duplicates.map((p) => this.client.core.pairing.disconnect({ topic: p.topic })),\n      );\n      this.client.logger.info(`Duplicate pairings clean up finished`);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n    if (this.client.core.crypto.keychain.has(self.publicKey)) {\n      await this.client.core.crypto.deleteKeyPair(self.publicKey);\n    }\n    if (this.client.core.crypto.keychain.has(topic)) {\n      await this.client.core.crypto.deleteSymKey(topic);\n    }\n    if (!expirerHasDeleted) this.client.core.expirer.del(topic);\n    // remove any deeplinks from storage after the session is deleted\n    // to avoid navigating to incorrect deeplink later on\n    this.client.core.storage\n      .removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n      .catch((e) => this.client.logger.warn(e));\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n    this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((r) => r.id !== id);\n    // set the requestQueue state to idle if expirer has deleted a request as trying to respond to it would result in an exception\n    if (expirerHasDeleted) {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n    }\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params, verifyContext } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n      verifyContext,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (args) => {\n    const { topic, method, params, expiry, relayRpcId, clientRpcId, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcRequest(method, params, clientRpcId);\n    if (isBrowser() && METHODS_TO_VERIFY.includes(method)) {\n      const hash = hashMessage(JSON.stringify(payload));\n      this.client.core.verify.register({ attestationId: hash });\n    }\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    if (relayRpcId) opts.id = relayRpcId;\n    this.client.core.history.set(topic, payload);\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (args) => {\n    const { id, topic, result, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private async isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n    await this.client.core.relayer.confirmOnlineStateOrThrow();\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        try {\n          if (isJsonRpcRequest(payload)) {\n            this.client.core.history.set(topic, payload);\n            this.onRelayEventRequest({ topic, payload });\n          } else if (isJsonRpcResponse(payload)) {\n            await this.client.core.history.resolve(payload);\n            await this.onRelayEventResponse({ topic, payload });\n            this.client.core.history.delete(topic, payload.id);\n          } else {\n            this.onRelayEventUnknownPayload({ topic, payload });\n          }\n        } catch (error) {\n          this.client.logger.error(error);\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = async (event) => {\n    this.requestQueue.queue.push(event);\n    await this.processRequestsQueue();\n  };\n\n  private processRequestsQueue = async () => {\n    if (this.requestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(`Request queue already active, skipping...`);\n      return;\n    }\n\n    this.client.logger.info(\n      `Request queue starting with ${this.requestQueue.queue.length} requests`,\n    );\n\n    while (this.requestQueue.queue.length > 0) {\n      this.requestQueue.state = ENGINE_QUEUE_STATES.active;\n      const request = this.requestQueue.queue.shift();\n      if (!request) continue;\n\n      try {\n        this.processRequest(request);\n        // small delay to allow for any async tasks to complete\n        await new Promise((resolve) => setTimeout(resolve, 300));\n      } catch (error) {\n        this.client.logger.warn(error);\n      }\n    }\n    this.requestQueue.state = ENGINE_QUEUE_STATES.idle;\n  };\n\n  private processRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  private onRelayEventUnknownPayload: EnginePrivate[\"onRelayEventUnknownPayload\"] = (event) => {\n    const { topic } = event;\n    const { message } = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `Decoded payload on topic ${topic} is not identifiable as a JSON-RPC request or a response.`,\n    );\n    throw new Error(message);\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      const hash = hashMessage(JSON.stringify(payload));\n      const verifyContext = await this.getVerifyContext(hash, proposal.proposer.metadata);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal, verifyContext });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n        pairingTopic,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        pairingTopic,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">({ id: payload.id, topic, result: true });\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n      this.cleanupDuplicatePairings(session);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      const memoryKey = `${topic}_session_update`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">({ id, topic, result: true });\n      this.client.events.emit(\"session_update\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // compares the timestamp of the last processed request with the current request\n  // client <-> client rpc ID is timestamp + 3 random digits\n  private isRequestOutOfSync = (lastId: number, currentId: number) => {\n    return parseInt(currentId.toString().slice(0, -3)) <= parseInt(lastId.toString().slice(0, -3));\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">({ id, topic, result: true });\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">({ id, topic, result: true });\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      await Promise.all([\n        new Promise((resolve) => {\n          // RPC request needs to happen before deletion as it utalises session encryption\n          this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n            resolve(await this.deleteSession(topic));\n          });\n        }),\n        this.sendResult<\"wc_sessionDelete\">({ id, topic, result: true }),\n      ]);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      const hash = hashMessage(\n        JSON.stringify(formatJsonRpcRequest(\"wc_sessionRequest\", params, id)),\n      );\n      const session = this.client.session.get(topic);\n      const verifyContext = await this.getVerifyContext(hash, session.peer.metadata);\n      const request = { id, topic, params, verifyContext };\n      await this.setPendingSessionRequest(request);\n      this.addSessionRequestToSessionRequestQueue(request);\n      this.processSessionRequestQueue();\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      // similar to session update, we want to discard out of sync requests\n      // additionally we have to check the event type as well e.g. chainChanged/accountsChanged\n      const memoryKey = `${topic}_session_event_${params.event.name}`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private addSessionRequestToSessionRequestQueue = (request: PendingRequestTypes.Struct) => {\n    this.sessionRequestQueue.queue.push(request);\n  };\n\n  private cleanupAfterResponse = (params: EngineTypes.RespondParams) => {\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n    // intentionally delay the emitting of the next pending request a bit\n    setTimeout(() => {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n      this.processSessionRequestQueue();\n    }, toMiliseconds(this.requestQueueDelay));\n  };\n\n  private processSessionRequestQueue = () => {\n    if (this.sessionRequestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(\"session request queue is already active.\");\n      return;\n    }\n    // Select the first/oldest request in the array to ensure last-in-first-out (LIFO)\n    const request = this.sessionRequestQueue.queue[0];\n    if (!request) {\n      this.client.logger.info(\"session request queue is empty.\");\n      return;\n    }\n\n    try {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.active;\n      this.client.events.emit(\"session_request\", request);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Pairing Events ---------------------------------------- //\n  private registerPairingEvents() {\n    this.client.core.pairing.events.on(PAIRING_EVENTS.create, (pairing: PairingTypes.Struct) =>\n      this.onPairingCreated(pairing),\n    );\n  }\n\n  /**\n   * when a pairing is created, we check if there is a pending proposal for it.\n   * if there is, we send it to onSessionProposeRequest to be processed as if it was received from the relay.\n   * It allows QR/URI to be scanned multiple times without having to create new pairing.\n   */\n  private onPairingCreated = (pairing: PairingTypes.Struct) => {\n    if (pairing.active) return;\n    const proposals = this.client.proposal.getAll();\n    const proposal = proposals.find((p) => p.pairingTopic === pairing.topic);\n    if (!proposal) return;\n    this.onSessionProposeRequest(\n      pairing.topic,\n      formatJsonRpcRequest(\n        \"wc_sessionPropose\",\n        {\n          requiredNamespaces: proposal.requiredNamespaces,\n          optionalNamespaces: proposal.optionalNamespaces,\n          relays: proposal.relays,\n          proposer: proposal.proposer,\n        },\n        proposal.id,\n      ),\n    );\n  };\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private getVerifyContext = async (hash: string, metadata: CoreTypes.Metadata) => {\n    const context: Verify.Context = {\n      verified: {\n        verifyUrl: metadata.verifyUrl || VERIFY_SERVER,\n        validation: \"UNKNOWN\",\n        origin: metadata.url || \"\",\n      },\n    };\n\n    try {\n      const result = await this.client.core.verify.resolve({\n        attestationId: hash,\n        verifyUrl: metadata.verifyUrl,\n      });\n      if (result) {\n        context.verified.origin = result.origin;\n        context.verified.isScam = result.isScam;\n        context.verified.validation =\n          result.origin === new URL(metadata.url).origin ? \"VALID\" : \"INVALID\";\n      }\n    } catch (e) {\n      this.client.logger.info(e);\n    }\n\n    this.client.logger.info(`Verify context: ${JSON.stringify(context)}`);\n    return context;\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.core.verify.init({ verifyUrl: this.metadata.verifyUrl });\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_QUEUE_STATES","ONE_SECOND","ENGINE_RPC_OPTS","toMiliseconds","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","reason","acknowledged","chainId","request","payloadId","done","result","wcDeepLink","WALLETCONNECT_DEEPLINK_CHOICE","handleDeeplinkRedirect","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","pairing","duplicates","p","_a","_b","expirerHasDeleted","self","e","r","pendingRequest","verifyContext","args","method","relayRpcId","clientRpcId","throwOnFailedPublish","payload","formatJsonRpcRequest","isBrowser","METHODS_TO_VERIFY","hash","hashMessage","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","memoryKey","lastSessionUpdateId","MemoryStore","lastId","currentId","_topic","RELAYER_EVENTS","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","metadata","context","VERIFY_SERVER","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","PAIRING_EVENTS","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","val","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}